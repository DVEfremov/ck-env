{
  "customize": {
    "build_dir_name": "llvm", 
    "can_strip_dynamic_lib": "yes", 
    "env_prefix": "CK_ENV_COMPILER_LLVM", 
    "languages": [
      "C", 
      "CPP"
    ], 
    "skip_add_to_ld_path": "yes"
  }, 
  "customize_script": "customize", 
  "deps": {
    "compiler_mcl": {
      "local": "yes", 
      "tags": "compiler,mcl"
    }
  }, 
  "env": {
    "CK_AFTER_COMPILE_TO_BC": "ren *.o *", 
    "CK_AR": "lib", 
    "CK_ASM_EXT": ".s", 
    "CK_BC_EXT": ".bc", 
    "CK_CC": "$#tool_prefix#$clang", 
    "CK_COMPILER_FLAGS_OBLIGATORY": "-DWINDOWS", 
    "CK_COMPILER_FLAG_CPP11": "-std=c++11", 
    "CK_COMPILER_FLAG_OPENMP": "-fopenmp", 
    "CK_COMPILER_FLAG_PTHREAD_LIB": "-lpthread", 
    "CK_COMPILER_FLAG_STD90": "-std=c90", 
    "CK_COMPILER_FLAG_STD99": "-std=c99", 
    "CK_COMPILER_FLAG_MFLOAT_ABI_HARD": "-mfloat-abi=hard", 
    "CK_CXX": "$#tool_prefix#$clang++", 
    "CK_DLL_EXT": ".dll", 
    "CK_EXE_EXT": ".exe", 
    "CK_EXTRA_LIB_DL": "", 
    "CK_EXTRA_LIB_M": "", 
    "CK_F90": "", 
    "CK_F95": "", 
    "CK_FC": "", 
    "CK_FLAGS_CREATE_ASM": "-S", 
    "CK_FLAGS_CREATE_BC": "-c -emit-llvm", 
    "CK_FLAGS_CREATE_OBJ": "-c", 
    "CK_FLAGS_DLL": "", 
    "CK_FLAGS_DLL_EXTRA": "-Xlinker /dll", 
    "CK_FLAGS_DYNAMIC_BIN": "", 
    "CK_FLAGS_OUTPUT": "-o", 
    "CK_FLAGS_STATIC_BIN": "-static -Wl,/LARGEADDRESSAWARE:NO", 
    "CK_FLAGS_STATIC_LIB": "-fPIC", 
    "CK_FLAG_PREFIX_INCLUDE": "-I", 
    "CK_FLAG_PREFIX_LIB_DIR": "-L", 
    "CK_FLAG_PREFIX_VAR": "-D", 
    "CK_LB": "lib", 
    "CK_LB_OUTPUT": "/OUT:", 
    "CK_LD_DYNAMIC_FLAGS": "", 
    "CK_LD_FLAGS_EXTRA": "", 
    "CK_LIB_EXT": ".lib", 
    "CK_LINKER_FLAG_OPENMP": "-lgomp -lrt", 
    "CK_MAKE": "nmake", 
    "CK_OBJDUMP": "llvm-objdump -d", 
    "CK_OBJ_EXT": ".o", 
    "CK_OPT_SIZE": "-Os", 
    "CK_OPT_SPEED": "-O3", 
    "CK_OPT_SPEED_SAFE": "-O2", 
    "CK_PLUGIN_FLAG": "-fplugin=", 
    "CK_PROFILER": "gprof", 
    "CM_INTERMEDIATE_OPT_TOOL": "opt", 
    "CM_INTERMEDIATE_OPT_TOOL_OUT": "-o"
  }, 
  "soft_name": "Compiler - LLVM", 
  "tags": [
    "compiler", 
    "llvm", 
    "lang-c", 
    "lang-cpp"
  ], 
  "tool": "clang", 
  "version": {
    "cmd": "--version > $#filename#$ 2>&1", 
    "split": ".", 
    "string_after": "(", 
    "string_before": "version "
  }
}
